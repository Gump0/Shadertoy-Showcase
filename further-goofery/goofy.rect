// Further-Goofery
// COLOR
vec3 palette( float t ) {
    vec3 a = vec3(0.25, 0.33, 0.55);
    vec3 b = vec3(0.21, 0.16, 0.13);
    vec3 c = vec3(1.0, 1.0, 1.0);
    vec3 d = vec3(0.263,0.416,0.557);

    return a + b*cos( 6.28318*(c*t+d) );
}
// SHADER
void mainImage( out vec4 fragColor, in vec2 fragCoord ) {
    vec2 uv = (fragCoord * 2.0 - iResolution.xy) / iResolution.y;
    //uv = fract(uv * 2.0) - 0.5;

    float a = length(uv + 1.5);
    a = sin(a - iTime);
    a = abs(a);
    a = 0.025/a;
    
    float b = length(uv - 1.5);
    b = sin(b - iTime);
    b = abs(b);
    b = 0.025/b;
    
    vec3 col = palette(a + b + iTime);
    
    fragColor = vec4(col, 1.0);
} 
